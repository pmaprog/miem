#include <iostream>
#include <vector>

using namespace std;


int main() {
    vector<string> a; // массив строк
    string s2, s3; // s2 - подстрока, s3 - предложение

    // заполняем массив строк до тех пор, пока не встретилась строка "0"
    while (1) {
        string s;
        cin >> s;
        if (s == "0") break;
        a.push_back(s);
    }

    cout << "Исходный массив строк: \n";
    for (auto i : a)
        cout << i << "\n";

    cout << "\n";

    // в цикле пробегаем по каждому слову
    for (auto &s : a) {
        int pos = 0; // здесь хранится позиция найденной подстроки `ab`
        while (pos != -1 || pos < s.length()) { // если `ab` не найдена в строке или мы дошли до конца строки, завершаем цикл
            pos = s.find("ab", pos); // находим следующую `ab` в строке
            if (pos != -1) { // если нашли
                s.erase(pos, 2); // удаляем `ab`
                s.insert(pos, "ccc"); // добавляем `ccc` вместо удаленной `ab`
            }
        }

        if (s.length() > 1)
            s2.append(s.substr(s.length() - 2)); // добавляем в подстроку последние два символа слова
    }

    // в цикле пробегаем по каждому слову
    for (auto s : a) {
        int i;
        for (i = 0; i < s2.length(); ++i) // в цикле пробегаем по каждому символу подстроки
            if (s.find(s2[i]) != -1) break; // если в слове ЕСТЬ символ подстроки, то выходим из цикла 
        if (i == s2.length()) // если цикл дошел до конца, значит в слове нет ниодного символа подстроки
            s3.append(s + " "); // добавляем слово в предложение
    }

    // далее идет вывод на экран
    cout << "После замены `ab` на `ccc`: \n";
    for (auto i : a)
        cout << i << "\n";

    cout << "\n";
    cout << "Подстрока: " << s2 << "\n";
    cout << "Предложение: " << s3 << "\n";

    return 0;
}
